generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id        String   @id @default(cuid())
  name      String
  email     String?  @unique
  phone     String?
  status    String   @default("ACTIVE") // ACTIVE, TENTATIVE, INACTIVE
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  matchPlayers MatchPlayer[]
  payments     Payment[]

  @@map("players")
}

model Match {
  id          String   @id @default(cuid())
  title       String
  location    String
  courtNumber String?
  date        DateTime
  time        String
  fee         Float
  status      String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  players  MatchPlayer[]
  payments Payment[]

  @@map("matches")
}

model MatchPlayer {
  id            String   @id @default(cuid())
  matchId       String
  playerId      String
  paymentStatus String   @default("BELUM_SETOR") // BELUM_SETOR, SUDAH_SETOR
  joinedAt      DateTime @default(now())

  match  Match  @relation(fields: [matchId], references: [id], onDelete: Cascade)
  player Player @relation(fields: [playerId], references: [id], onDelete: Cascade)

  @@unique([matchId, playerId])
  @@map("match_players")
}

model Payment {
  id      String    @id @default(cuid())
  playerId String
  matchId String?
  amount  Float
  status  String    @default("PENDING")
  method  String?
  notes   String?
  paidAt  DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  player Player @relation(fields: [playerId], references: [id], onDelete: Cascade)
  match  Match? @relation(fields: [matchId], references: [id])

  @@map("payments")
}
