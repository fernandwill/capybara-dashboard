generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}

model Player {
  id            String        @id @default(cuid())
  name          String
  email         String?       @unique
  phone         String?
  status        String        @default("ACTIVE")
  paymentStatus String        @default("BELUM_SETOR")
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  matchPlayers  MatchPlayer[]
  payments      Payment[]

  @@map("players")
}

model Match {
  id          String        @id @default(cuid())
  title       String
  location    String
  courtNumber String?
  date        DateTime
  time        String
  fee         Float
  status      String
  description String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  players     MatchPlayer[]
  payments    Payment[]

  @@map("matches")
}

model MatchPlayer {
  id       String   @id @default(cuid())
  matchId  String
  playerId String
  joinedAt DateTime @default(now())
  match    Match    @relation(fields: [matchId], references: [id], onDelete: Cascade)
  player   Player   @relation(fields: [playerId], references: [id], onDelete: Cascade)

  @@unique([matchId, playerId])
  @@map("match_players")
}

model Payment {
  id        String    @id @default(cuid())
  playerId  String
  matchId   String?
  amount    Float
  status    String    @default("PENDING")
  method    String?
  notes     String?
  paidAt    DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  match     Match?    @relation(fields: [matchId], references: [id])
  player    Player    @relation(fields: [playerId], references: [id], onDelete: Cascade)

  @@map("payments")
}
